<UserControl x:Class="ATG_Notifier.Desktop.WPF.Controls.NotificationListbox"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ATG_Notifier.Desktop.WPF.Controls"
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:behaviors="clr-namespace:ATG_Notifier.Desktop.WPF.Behaviors"
             xmlns:converters="clr-namespace:ATG_Notifier.Desktop.WPF.Converters"
             mc:Ignorable="d" 
             d:DesignHeight="310" d:DesignWidth="64">
    <UserControl.Resources>
        <ResourceDictionary>
            
            <!--#region Brushes -->
            <SolidColorBrush x:Key="MenuNotification.Border" Color="LightGray" />

            <SolidColorBrush x:Key="Item.MouseOver.Background" Color="#1F26A0DA"/>
            <SolidColorBrush x:Key="Item.MouseOver.Border" Color="#a826A0Da"/>
            <SolidColorBrush x:Key="Item.SelectedInactive.Background" Color="#3DDADADA"/>
            <SolidColorBrush x:Key="Item.SelectedInactive.Border" Color="#FFDADADA"/>
            <SolidColorBrush x:Key="Item.SelectedActive.Background" Color="#3D26A0DA"/>
            <SolidColorBrush x:Key="Item.SelectedActive.Border" Color="#FF26A0DA"/>

            <SolidColorBrush x:Key="Item.Border.Focus" Color="Black" />

            <!--#endregion-->
            
            <!--#region Converters-->

            <converters:CountToVisibilityConverter x:Key="NoChapterUpdateLableVisibilityConverter" 
                                                   ZeroCountVisibility="Visible" 
                                                   PositiveCountVisibility="Collapsed" />

            <converters:CountToVisibilityConverter x:Key="ChapterProfileListVisibilityConverter" 
                                                   ZeroCountVisibility="Collapsed" 
                                                   PositiveCountVisibility="Visible" />

            <!--#endregion-->

            <Style x:Key="ListBoxItem_MenuNotification" TargetType="ListBoxItem">
                <Setter Property="Padding" Value="0"/>
                <Setter Property="Margin" Value="0" />
                <Setter Property="HorizontalContentAlignment" Value="Stretch"/>
                <Setter Property="VerticalContentAlignment" Value="{Binding VerticalContentAlignment, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="Background" Value="Transparent"/>
                <Setter Property="BorderBrush" Value="{StaticResource MenuNotification.Border}"/>
                <Setter Property="BorderThickness" Value="0,0,0,1"/>
                <Setter Property="Focusable" Value="True" />
                <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
                <Setter Property="behaviors:FocusBehavior.LostFocusCommand" Value="{Binding Path=Tag.ReadChapterCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="behaviors:FocusBehavior.LostFocusCommandParameter" Value="{Binding}" />
                <Setter Property="behaviors:ClickBehavior.DoubleClickCommand" Value="{Binding Path=Tag.OpenChapterCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}" />
                <Setter Property="behaviors:ClickBehavior.DoubleClickCommandParameter" Value="{Binding}" />
                <Setter Property="behaviors:KeyPressBehavior.KeyPressedCommand" Value="{Binding Path=Tag.OpenChapterCommand, RelativeSource={RelativeSource AncestorType={x:Type ItemsControl}}}"/>
                <Setter Property="behaviors:KeyPressBehavior.KeyPressedCommandParameter" Value="{Binding}"/>
                <Setter Property="behaviors:KeyPressBehavior.Key" Value="Enter" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListBoxItem">
                            <Border x:Name="Border_ItemBorder" 
                                    BorderBrush="{TemplateBinding BorderBrush}" 
                                    BorderThickness="{TemplateBinding BorderThickness}" 
                                    Background="{TemplateBinding Background}" 
                                    Padding="{TemplateBinding Padding}">
                                <Border x:Name="Border_Focus" 
                                        BorderThickness="0"
                                        Padding="1">
                                    <Border.BorderBrush>
                                        <DrawingBrush Viewport="0,0,2,2" ViewportUnits="Absolute" TileMode="Tile">
                                            <DrawingBrush.Drawing>
                                                <DrawingGroup>
                                                    <GeometryDrawing Brush="{StaticResource Item.Border.Focus}">
                                                        <GeometryDrawing.Geometry>
                                                            <GeometryGroup>
                                                                <RectangleGeometry Rect="0,0,50,50" />
                                                                <RectangleGeometry Rect="50,50,50,50" />
                                                            </GeometryGroup>
                                                        </GeometryDrawing.Geometry>
                                                    </GeometryDrawing>
                                                </DrawingGroup>
                                            </DrawingBrush.Drawing>
                                        </DrawingBrush>
                                    </Border.BorderBrush>

                                    <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Border>
                            </Border>
                            <ControlTemplate.Triggers>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="IsMouseOver" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border_ItemBorder" Property="Background" Value="{StaticResource Item.MouseOver.Background}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="False"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter Property="Background" TargetName="Border_ItemBorder" Value="{StaticResource Item.SelectedInactive.Background}"/>
                                </MultiTrigger>
                                <MultiTrigger>
                                    <MultiTrigger.Conditions>
                                        <Condition Property="Selector.IsSelectionActive" Value="True"/>
                                        <Condition Property="IsSelected" Value="True"/>
                                    </MultiTrigger.Conditions>
                                    <Setter TargetName="Border_ItemBorder" Property="Background" Value="{StaticResource Item.SelectedActive.Background}"/>
                                </MultiTrigger>
                                <Trigger Property="IsEnabled" Value="False">
                                    <Setter Property="TextElement.Foreground" TargetName="Border_ItemBorder" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                                </Trigger>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter TargetName="Border_Focus" Property="BorderThickness" Value="1" />
                                    <Setter TargetName="Border_Focus" Property="Padding" Value="0" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <CollectionViewSource x:Key="NotificationsSortView"
                                  Source="{Binding ChapterProfiles}">
                <CollectionViewSource.SortDescriptions>
                    <scm:SortDescription PropertyName="ArrivalTime" Direction="Descending" />
                </CollectionViewSource.SortDescriptions>
            </CollectionViewSource>

            <ItemsPanelTemplate x:Key="NotificationListTemplate">
                <StackPanel Orientation="Vertical"
                            VerticalAlignment="Top"
                            ScrollViewer.VerticalScrollBarVisibility="Disabled"/>
            </ItemsPanelTemplate>

            <Style x:Key="WarningFillButtonStyle" TargetType="Button">
                <Setter Property="Foreground" Value="Red" />
                <Setter Property="Background" Value="White" />
                <Setter Property="BorderBrush" Value="LightGray" />
                <Setter Property="BorderThickness" Value="1" />
                <Setter Property="SnapsToDevicePixels" Value="True" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type Button}">
                            <Border CornerRadius="0" 
                                    Background="{TemplateBinding Background}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    Margin="{TemplateBinding Margin}">
                                <Grid>
                                    <ContentControl x:Name="MyContentPresenter" 
                                                    Foreground="{TemplateBinding Foreground}"
                                                    Content="{TemplateBinding Content}" 
                                                    HorizontalAlignment="Center" VerticalAlignment="Center" 
                                                    Margin="{TemplateBinding Padding}" 
                                                    IsTabStop="False"/>
                                </Grid>
                            </Border>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="Background" Value="Red" />
                                    <Setter Property="BorderBrush" Value="Red" />
                                </Trigger>
                                <Trigger Property="IsPressed" Value="True">
                                    <Setter Property="Foreground" Value="White"/>
                                    <Setter Property="Background" Value="#FF961313" />
                                    <Setter Property="BorderBrush" Value="#FF961313" />
                                </Trigger>
                            </ControlTemplate.Triggers>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid HorizontalAlignment="Stretch"
          Background="Transparent">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition />
        </Grid.RowDefinitions>

        <Border BorderThickness="0,0,0,1"
                BorderBrush="LightGray">
            <StackPanel Grid.Row="0" 
                        Orientation="Horizontal"
                        HorizontalAlignment="Stretch"
                        Margin="7,2,7,2">
                <Button Content="Clear List"
                        FontFamily="Segoe UI" FontSize="13"
                        Padding="5,2,5,2"
                        Style="{StaticResource WarningFillButtonStyle}"
                        Command="{Binding ClearListCommand}"
                    />
            </StackPanel>
        </Border>

        <TextBlock Grid.Row="1" 
                   Text="No new updates"
                   HorizontalAlignment="Center" VerticalAlignment="Center"
                   TextAlignment="Center"
                   FontFamily="Segoe UI" FontSize="20"
                   Foreground="Black"
                   Visibility="{Binding ChapterProfiles.Count, Converter={StaticResource NoChapterUpdateLableVisibilityConverter}}" />

        <ListBox x:Name="ChapterProfileList"  
                 Grid.Row="1"
                 HorizontalAlignment="Stretch"
                 Background="Transparent"
                 Padding="0,0,0,0"
                 Margin="-1, -1, 0,0"
                 KeyboardNavigation.DirectionalNavigation="Cycle"
                 ItemContainerStyle="{StaticResource ListBoxItem_MenuNotification}"
                 
                 ItemsSource="{Binding Source={StaticResource NotificationsSortView}}"
                 SelectionMode="Extended"              
                 BorderThickness="0"
                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                 VirtualizingStackPanel.IsVirtualizing="True"
                 VirtualizingPanel.VirtualizationMode="Recycling"
                 VirtualizingPanel.ScrollUnit="Pixel"
                 IsTabStop="False"
                 Tag="{Binding}">
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <local:ChapterProfileCard ChapterProfileViewModel="{Binding}" 
                                              DeleteCommand="{Binding Path=Tag.DeleteChapterProfileCommand, ElementName=ChapterProfileList}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <!-- Below is version with reserved space for vertical scrollbar...however, that breaks scrollbar touchpad scrolling -->
        <!--<Grid.Resources>
            <ControlTemplate x:Key="ReservedSpaceScroller" TargetType="ContentControl">
                <ScrollViewer VerticalScrollBarVisibility="Auto"
                              PanningMode="VerticalOnly"
                              x:Name="scroll">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <ContentPresenter Grid.Column="0" 
                                          Margin="0,0,5,0"/>
                        <Border x:Name="placeholder"
                                Grid.Column="1"
                                Width="14"/>

                    </Grid>
                </ScrollViewer>
                <ControlTemplate.Triggers>
                    <DataTrigger Binding="{Binding ComputedVerticalScrollBarVisibility, ElementName=scroll}" Value="Visible">
                        <Setter TargetName="placeholder" Property="Visibility" Value="Collapsed" />
                    </DataTrigger>
                </ControlTemplate.Triggers>
            </ControlTemplate>
        </Grid.Resources>

        <TextBlock Text="No new updates"
                   HorizontalAlignment="Center" VerticalAlignment="Center"
                   TextAlignment="Center"
                   FontFamily="Segoe UI" FontSize="20"
                   Foreground="Black"
                   Visibility="{Binding ChapterProfiles.Count, Converter={StaticResource NoChapterUpdateLableVisibilityConverter}}" />

        <ContentControl Template="{StaticResource ReservedSpaceScroller}"
                        Visibility="{Binding ChapterProfiles.Count, Converter={StaticResource ChapterProfileListVisibilityConverter}}">
            <ListBox x:Name="ChapterProfileList"     
                     HorizontalAlignment="Stretch"
                     Background="Transparent"
                     Padding="0,0,0,0"
                     Margin="-1, -1, 0,0"
                     
                     ItemContainerStyle="{StaticResource ListBoxItem_MenuNotification}"
                     ItemsPanel="{StaticResource NotificationListTemplate}"
                     ItemsSource="{Binding Source={StaticResource NotificationsSortView}}"
                     SelectionMode="Extended"              
                     BorderThickness="0"
                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                     ScrollViewer.CanContentScroll="False"
                     IsTabStop="False"
                     Tag="{Binding}">
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <local:ChapterProfileCard ChapterProfileViewModel="{Binding}" 
                                                  DeleteCommand="{Binding Path=Tag.DeleteChapterProfileCommand, ElementName=ChapterProfileList}"
                                                  IsTabStop="False"/>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </ContentControl>-->
    </Grid>
</UserControl>
